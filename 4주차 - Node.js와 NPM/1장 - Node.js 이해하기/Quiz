1. Node.js의 탄생 배경
 - 고성능 js의 발달
 - v8 엔진의 등장
 
 - 이벤트 루프는 node.js 의 구성요소 중 하나로 브라우저에서도 사용하는 기술이며,
   node.js 의 등장 배경과는 관련이 없다

2. Node.js 에 대한 설명
 - 싱글 쓰레드 기반이다
 - 이벤트 기반 동작을 사용한다
 - 비동기 동작을 기본으로 한다
 - 서버뿐 아니라 모든 영역을 지원하는 런타임이다
 - 동작에 큰 제한이 없다
 - 크로스 플랫폼에서 실행된다
 - 사용 분야의 제한 없이 다양한 분야에서 사용 가능하다
 - 비동기 동작의 완료를 확인하기 위해 이벤트 방식을 사용한다
 - v8 엔진을 통해 자바스크립트를 웹 브라우저 뿐만 아니라,
   어느 환경에서도 실행할 수 있게 만든 것
 - es6 지원한다
 - 비동기 동작을 구현하기 위해서 callback, promise, async-await을 활용하는 방법이 있다
 - 싱글 쓰레드 기반의 비동기 방식으로 cpu 리소스를 효율적으로 관리한다
   멀티 쓰레드 기반의 동기 방식은 한번의 여러 작업을 동시에 진행할 수 있지만,
   동작을 실행하고 기다리는 동안에 cpu 리소스가 낭비될 수 있다


3. async - await
 - 내부적으로 promise로 구현되어 있다
 - 순차적 코딩처럼 사용할 수 있다

4. 출력 결과 순서
function baz() {
  console.log('baz');
}

function bar() {
  console.log('bar');
}

function foo() {
  console.log('foo');
  setTimeout(bar, 0);
  baz();
}

foo();

답) foo - baz - bar
- setTimeout은 비동기 동작이므로
  bar 함수는 메시지 큐에 들어갔다가,
  foo 함수가 종료되어 콜스택이 비어있을 때 콜스택으로 옮겨진 후 실행된다


5. 웹에 대한 설명
 - 웹 서비스 기본적으로 http 요청과 응답의 반복으로 이루어진다
 - 웹 서비스 개발 시 프론트엔드는 사용자가 직접 사용하게 되는 웹 페이지를,
   백엔드는 사용자에게 보이지 않는 데이터 가공 등의 기능을 주로 담당한다
 - 정적 웹은 사용자와 상호작용하지 않는 단방향 통신,
   동적 웹은 사용자와 상호작용을 하는 양방향 통신을 제공한다
 - 웹 프레임워크란 웹 서비스에 필요한 기능들을 제공해주는 다양한 도구들의 모음을 말한다
 - csr과 ssr 모두 동적 웹을 구현하는 방법이다
   csr은 프론트엔드에서 사용자가 페이지에서 보는 동적인 부분을 처리하는 방식이고,
   ssr은 백엔드에서 페이지 대부분의 영역을 처리해서 프론트엔드로 전달하는 방식을 말한다

