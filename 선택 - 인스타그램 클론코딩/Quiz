1. 클라우드 저장소 VS 로컬 저장소
클라우드 저장소란?
클라우드 저장소는 데이터를 저장하는 데 사용하는 온라인 공간을 지칭하는 용어입니다. 외장형 하드 드라이브나 USB 플래시 드라이브와 같은 실제 저장 장치에 파일을 백업하는 것은 물론 중요한 데이터를 원격으로 안전하게 보관하여 어디에서나 데이터에 엑세스할 수 있습니다.

웹 저장소란?
웹 저장소는 쿠키와 비슷하게 해당 도메인과 관련된 특정 데이터를 서버가 아니라 클라이언트에 저장 할 수 있도록 하는 기능입니다.

웹 저장소에 대한 자세한 설명은 구글 디벨로퍼스 문서를 참고해주세요.

2. 웹 저장소 종류
1. 쿠키
클라이언트가 서버에 방문한 정보를 브라우저에 저장하는 작은 크기의 문자열을 의미

클라이언트의 브라우저 메모리 혹은 하드디스크에 저장됨. (↔ 세션)

매번 서버에 전송되므로 크기가 클 경우 서버에 부담을 줌

대략 4KB까지의 데이터를 저장할 수 있으며 유효 기간이 존재함

대부분의 브라우저가 지원함

2. 웹 스토리지 - 로컬 스토리지, 세션 스토리지
클라이언트 단에 데이터를 저장할 수 있도록 HTML5부터 새롭게 지원하는 저장소

키(Key)와 값(Value)의 쌍 형태로 데이터를 저장 가능

쿠키와 달리, 서버에 전송되지 않으므로 서버에 부담이 안됨 (명시적으로만 전송 가능)

쿠키와 달리, 필요한 경우에만 꺼내 쓰는 것이므로 자동 전송의 위험성이 없음. 다른 도메인에서 요청하는 경우에는, 꺼내 쓰고 싶어도 도메인 단위로 접근이 제한되는 특성 덕분에 값을 꺼내 쓸 수 없음. (CSRF 안전)

쿠키와 달리, 대략 5MB까지의 데이터를 저장할 수 있으며 유효 기간이 존재하지 않음

HTML5를 지원하지 않는 브라우저에서는 사용할 수 없음

종류로는 로컬 스토리지(Local Storage) 와 세션 스토리지(Session Storage) 가 있다. 이들은 window 객체의 프로퍼티로서 존재하며, 같은 Storage 객체를 상속하기 때문에 동일한 메소드들을 가진다. 이 둘의 가장 큰 차이점은 데이터의 영구성

2-1. 로컬 스토리지 (Local Storage)
window.localStorage 객체

브라우저를 종료해도 유지되는 데이터로, 명시적으로 지우지 않는 한 영구적으로 저장됨

도메인별로 생성되며, 다른 도메인의 로컬 스토리지에는 접근이 불가능

서로 다른 브라우저 탭이라도 동일한 도메인이라면 동일한 로컬 스토리지를 사용함

지속적으로 필요한 정보를 저장하기에 좋음 (ex. 자동 로그인 등)

2-2. 세션 스토리지 (Session Storage)
window.sessionStorage 객체

세션 쿠키와 달리, 탭/윈도우 단위로 세션 스토리지가 생성됨

즉 window 객체와 동일한 유효 범위 및 생존 기간을 가지며, 탭/윈도우를 닫을 시 데이터가 삭제됨

또한 동일한 탭/윈도우라도 다른 도메인이라면 또 다른 세션 스토리지가 생성됨

서로 다른 세션 스토리지는 서로 영향을 주지 않으며 독립적으로 동작함

윈도우 복제로 생성된 경우, 혹은 스크립트로 새 창을 연 경우 세션 스토리지가 복제되어 생성됨

잠시 동안 필요한 정보를 저장하기에 좋음 (ex. 입력 폼 저장, 일회성 로그인 등)

3. IndexedDB
IndexedDB는 많은 양의 구조화된 데이터를 클라이언트에 저장하기 위한 로우 레벨 API 중 하나인 로컬 저장소입니다. (MDN Web Docs, IndexedDB)

자세한 설명은 Mozllia 웹 문서를 참고해주세요.

IndexedDB 특징
많은 양의 구조화된 데이터를 클라이언트에 저장할 수 있다.
Javascript 기반의 객체지향 데이터베이스이다. (즉, Javascript가 인식할 수 있는 자료형과 객체를 저장할 수 있습니다)
Key-Value 데이터베이스이다.

IndexedDB 사용 패턴 💡
데이터베이스를 열고
객체 저장소(Object store)를 생성
트랜잭션(Transaction)을 시작하고 데이터베이스 작업(데이터 읽기/추가 등)을 요청
DOM EventListner를 사용하여 요청이 완료될때가지 기다리고 결과를 확인

ObjectStore란❓
IndexedDB의 데이터를 담는 공간
모든 유형의 값을 키-값 또는 여러개의 키-값으로 저장 가능
여러개의 레코드(key-value) 관련 쿼리 지원
IndexedDB는 value 내의 특정 객체를 Index로 지정한 뒤, Index로 원하는 value를 검색할 수 있습니다.
localStorage와 비교해 더 많은 양의 데이터 저장 가능