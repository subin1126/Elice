1. 특정 문자가 포함된 문자열을 찾고 싶을 때 사용하는 명령은 LIKE이다

2. 값이 높은 데이터부터 정렬하여 검색하기 위해서는 내림차순으로 정렬해야 한다
   이를 위한 명령은 order by x desc 이다
   order by x 와 order by x asc 는 오름차순으로 정렬하여 검색하는 명령이다

3. 관계형 데이터 베이스의 테이블에 값을 저장하는 명령은 INSERT 이다

4. 관계형 데이터베이스의 테이블에서 이미 저장된 값을 수정하는 명령은 UPDATE 이다

5. 관계형 데이터베이스의 테이블에서 이미 저장된 값을 삭제하는 명령은 DELETE 이다

--------------------------------------------------------

데이터를 제어하는 DML
2장도 성공적으로 수강하셨네요! 축하합니다 😉
이번에는 좀 더 어려운 내용이 많아서 복습이 꼭 필요할 것 같군요!
우리 얼른 복습하러 가요~



1. 데이터에서 유사한 값 찾기
Point I
LIKE: 특정 문자가 포함된 문자열을 찾고 싶을 때 사용하는 명령어

SELECT * FROM book
WHERE title LIKE '어린왕자';
book 테이블에서 제목이 ‘어린왕자’인 책 검색
Point II
LIKE 조건의 다양한 형태

SELECT * FROM book
WHERE title LIKE '%왕자';
book 테이블에서 제목이 ‘왕자’로 끝나는 책 검색
SELECT * FROM book
WHERE title LIKE '어린%';
book 테이블에서 제목이 ‘어린’으로 시작하는 책 검색
SELECT * FROM book
WHERE title LIKE '%왕%';
book 테이블에서 제목이 ‘왕’을 포함하는 책 검색


2. 데이터 정렬하기
ORDER BY: 데이터를 검색할 때 정렬하여 결과를 출력하는 명령어

ASC = 오름차순 (작은 값부터)
DESC = 내림차순 (큰 값부터)
SELECT * FROM score
ORDER BY math ASC; --정렬조건 (오름차순)
score 테이블에서 수학 점수가 낮은 데이터부터 정렬하여 검색
SELECT * FROM score
ORDER BY math DESC; --정렬조건 (내림차순)
score 테이블에서 수학 점수가 높은 데이터부터 정렬하여 검색


3. 테이블에 데이터 삽입하기
INSERT: 관계형 데이터베이스의 테이블에 값을 저장하는 명령어

INSERT INTO book(id, title, author, publisher)
--명령, 테이블, 컬럼

VALUES('3', '햄릿', '윌리엄 셰익스피어', '엘리스 출판');
--추가할 데이터
‘햄릿’ 책 데이터를 book 테이블에 추가
INSERT INTO book

VALUES('3', '햄릿', '윌리엄 셰익스피어', '엘리스 출판');
컬럼을 명시하지 않으면 순서대로 값을 삽입


4. 테이블의 데이터 수정하기
UPDATE: 관계형 데이터베이스의 테이블에서 이미 저장된 값을 수정하는 명령어

UPDATE book --변경할 테이블
SET title = '돈키호테 1' --변경할 값
WHERE title = '돈키호테' ; --조건
책 제목이 ‘돈키호테’인 데이터의 제목을 ‘돈키호테 1’로 변경


5. 테이블의 데이터 삭제하기
DELETE: 관계형 데이터베이스의 테이블에서 이미 저장된 값을 삭제하는 명령어

DELETE FROM book --테이블
WHERE title = '돈키호테 1'; --조건
제목이 ‘돈키호테 1’인 책 데이터를 book 테이블에서 삭제
DELETE FROM book;
--조건 X
WHERE 조건이 없을 시 모든 데이터 삭제




