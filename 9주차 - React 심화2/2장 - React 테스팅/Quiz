1. 테스팅
 - 테스팅 코드 작성을 통해 미연의 에러를 사전에 방지할 수 있다
 - 코드를 작성하고 나서, 원하는 대로 동작하는지 알기 위해 테스팅이 필요하다
 - Mocking이란 특정 동작을 흉내 내는 것으로,
   예를 들어 실제 api를 호출하는 대신 가짜 payload를 반환하는 함수를 mocking function 이라고 한다
 - 앱의 특정 부분이 동작하는지 테스트하는 것은 integration 테스팅이라고 한다
   End-to-end 테스팅은 유저가 특정 시나리오를 가지고 그 시나리오 대로(eno-to-end로) 잘 동작하는지 테스트 하는 것을 말한다

2. jest
 - 오픈소스화된 React 테스팅 프레임워크이다
 - assertion 함수, test runner, mock 라이브러리 등을 제공해준다
 - Lifecycle 함수들은 beforeAll, befoeEach, afterEach, afterAll의 순서로 실행된다
 - 코드의 변경이 컴포넌트의 렌더링 결과에 영향을 미치는지를 파악하기에 적합한 것은
   Snapshot Testing을 말한다
   Async Assertion은 비동기 상황의 테스트를 처리할 수 있는 방법이다

3. jest 메소드
 - describe()는 여러 테스트를 묶어서 관리할 때 사용한다
 - Mock functions에서 toHaveBeenCalled는 함수가 호출되었는지 검증하는데 사용한다
 - Snapshot testing()은 기존 스냅샷이 있을 경우 새로운 스냅샷과 비교하며 변경 사항이 있는 경우 테스트는 실패한다
 - 객체의 내용을 비교하는 것은 toBe() 함수이고, toEqual()은 객체 자체를 비교할 때 사용된다

4. react-testing-library에 사용되는 쿼리
 - container는 컴포넌트를 렌더한 결과를 감싸는 원소이다
 - getAllBy 관련 쿼리는 여러 요소를 찾아 배열을 반환한다
 - findBy 관련 쿼리는 원하는 원소가 없더라도 비동기적으로 기다린다
 - queryBy 관련 쿼리는 getBy와 비슷하게 원소를 찾아 반환하는 것은 맞으나,
   여러 원소를 찾으면 에러를 던진다

5. 쿼리의 우선순위
 - Text의 경우 유저가 볼 수 있는 Text 값을 기준으로 쿼리를 찾는다
 - 유저가 페이지를 이동하는 방식에 가까울수록 쿼리의 우선순위가 높다
 - ByRole에서 동일한 role을 가지는 경우에는 accessible name을 이용해 원소를 구별한다
 - 유저에게 보이지 않지만 접근성 스펙에 적합한 alt, title을 이용해 원소를 검색하는 것은
   semantic queries이다.
   Test ID는 data-testid 속성을 원하는 원소에 지정하고, 쿼리를 이용해 찾는다

6. user-event
 - 내장 이벤트 함수인 fireEvent, createEvent를 좀 더 직관적이고 범용적으로 사용할 수 있도록 만든 라이브러리이다
 - 유저가 실제로 웹페이지를 사용하며 만드는 이벤트를 메서드로 제공한다
 - userEvent.click()을 이용해 버튼을 클릭할 수 있다
 - userEvent.type()을 이용하면 타이핑, 즉 값을 입력할 수 있다

7. 테스팅 코드 작성 이점
 - 에러를 예상하는 상황들에 대한 테스트 코드를 작성하여, 미연의 에러를 방지한다
 - TDD(Test Driven Development)등의 방법론을 적용하여 생산성 향상이 가능하다
 - 테스트가 늘어나면서 테스트 코드가 구현 코드에 대한 문서화가 된다
 - 테스트가 용이하게 코드를 작성하여, 코드 품질과 신뢰성을 높인다

8. 테스팅을 분류하는 용어
 - 화이트박스 테스팅은 컴포넌트 내부 구조를 미리 안다고 가정하고 테스트 코드를 작성하는 것이다
 - 블랙박스 테스팅은 컴포넌트 내부 구조를 모른 채 어떻게 동작하는지에 대한 테스트 코드를 작성하는 것이다
 - 특정 컴포넌트가 데이터에 따라 잘 렌더링되는지를 테스트 하는 경우 Unit Testing을 사용한다

9. React 테스팅 라이브러리인 jest와 react-testing-library에 대한 설명
 - jest는 create-react-app에서 기본적으로 사용되는 프레임워크이다
 - jest는 assertion 함수, test runner, mock 라이브러리 등을 제공한다
 - react-testing-library는 React 컴포넌트가 렌더링한 결과에 대한 접근만 가능하다
 - react-tesintg-library는 React 컴포넌트의 특정 메서드나 상태가 아닌 
   실제 유저가 사용하는 방식대로 테스트한다
   따라서 내부 구현이 바뀌어도, 테스트 코드를 수정할 필요가 없다
